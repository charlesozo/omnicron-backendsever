name: Go CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Change directory to go folder
        working-directory: ./golang-server
        run: echo "Changed directory to golang-server"

      - name: Set environment variables
        run: |
          echo "API_KEY=${{ secrets.MY_API_KEY }}" >> $GITHUB_ENV
          echo "GROK_API_KEY=${{ secrets.GROK_API_KEY }}" >> $GITHUB_ENV
          echo "REPLICATE_API_TOKEN=${{secrets.REPLICATE_API_TOKEN}}" >> $GITHUB_ENV
          echo "CLOUDINARY_URL=${{secrets.CLOUDINARY_URL}}" >> $GITHUB_ENV
          echo "PORT=8000" >> $GITHUB_ENV

      - name: Fetch dependencies
        working-directory: ./golang-server
        run: make deps
        
      - name: Format code
        working-directory: ./golang-server
        run: make fmt

      - name: Build
        working-directory: ./golang-server
        run: make build

      - name: Test
        working-directory: ./golang-server
        run: make test

      - name: Echo Go version
        working-directory: ./golang-server
        run: go version

      - name: Install staticcheck
        working-directory: ./golang-server
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Static Check
        working-directory: ./golang-server
        run: make static-check

      - name: Install gosec
        working-directory: ./golang-server
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Security Scan
        working-directory: ./golang-server
        run: make security-scan

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Golang Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./golang-server
          push: true
          tags: charlesozo/omnicron-go:latest, charlesozo/omnicron-go:${{github.run_number}}
          build-args: |
            MY_API_KEY=${{ secrets.MY_API_KEY }}
            GROK_API_KEY=${{ secrets.GROK_API_KEY }}
            GEMINI_PRO_API_KEY=${{ secrets.GEMINI_PRO_API_KEY }}
